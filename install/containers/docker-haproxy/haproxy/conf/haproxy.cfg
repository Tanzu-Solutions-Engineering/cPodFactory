global
	user haproxy
	group haproxy
	daemon
	ssl-default-bind-ciphers ECDH+AESGCM:ECDH+CHACHA20:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS:!AESCCM:!ECDHE-RSA-RC4-SHA:!RC4-MD5:!ECDHE-RSA-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!DES-CBC3-SHA:!EDH-RSA-DES-CBC-SHA:!DES-CBC-SHA
	ssl-default-server-ciphers ECDH+AESGCM:ECDH+CHACHA20:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS:!AESCCM:!ECDHE-RSA-RC4-SHA:!RC4-MD5:!ECDHE-RSA-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!DES-CBC3-SHA:!EDH-RSA-DES-CBC-SHA:!DES-CBC-SHA
	tune.ssl.default-dh-param 2048
	maxconn 2000

defaults
	log	global
	mode	http
	option	dontlognull
        timeout connect 5000
        timeout client 50000
        timeout server 50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend wwws
	mode tcp
	bind *:443 name frontend-ssl 
	tcp-request inspect-delay 2s
	tcp-request content accept if { req.ssl_hello_type 1 }
	use_backend openvpn if !{ req.ssl_hello_type 1 } !{ req.len 0 } 
	default_backend main-ssl

frontend main
        bind 127.0.0.1:9443 ssl crt /etc/haproxy/cpodedge.pem
        mode http
        option forwardfor
        #http-request add-header X-Forwarded-Proto:\ https
        default_backend web-backend

backend main-ssl
	mode tcp 
	server main-ssl-1 127.0.0.1:9443

backend openvpn
	mode tcp 
	server openvpn-cpodedge 127.0.0.1:1195

backend web-backend
	mode http
	server web-cpodedge 127.0.0.1:8080 check

listen stats
	bind *:8090
	balance
	mode http
	stats enable
	stats auth admin:VMware1!
	stats uri /stats
